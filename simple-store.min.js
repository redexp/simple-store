!function(root,factory){"function"==typeof define&&define.amd?define(["simple-diff"],factory):"object"==typeof exports?module.exports=factory(require("simple-diff")):root.SimpleStore=factory(root.simpleDiff)}(this,function(diff){function SimpleStore(state,options){this.state=state,this.options=options||{},this.events={}}function isString(value){return"string"==typeof value}function pathToString(path){return path.map(numberToAsterisk).join(".")}function stringToPath(path){return path?path.split("."):[]}function numberToAsterisk(value){return"number"==typeof value?"*":value}function extend(target){for(var i=1,len=arguments.length;i<len;i++){var source=arguments[i];for(var prop in source)source.hasOwnProperty(prop)&&(target[prop]=source[prop])}return target}function findIndex(array,props){var index=array.indexOf(props);if(index>-1)return index;next:for(var item,i=0,len=array.length;i<len;i++){item=array[i];for(var prop in props)if(props.hasOwnProperty(prop)&&item[prop]!==props[prop])continue next;return i}return-1}return SimpleStore.prototype.set=function(path,newState){1===arguments.length&&(newState=path,path=[]),isString(path)&&(path=stringToPath(path));for(var prop,oldState=this.state,curState=this.state,i=0,len=path.length;i<len;i++)prop=path[i],i+1===len?(oldState=curState[prop],curState[prop]=newState):curState=curState[prop];var store=this;return diff(oldState,newState,extend({},this.options,{oldPath:path,newPath:path,callback:function(e){store.trigger(e)}})),this},SimpleStore.prototype.get=function(path){isString(path)&&(path=stringToPath(path));for(var prop,curState=this.state,i=0,len=path.length;i<len;i++)prop=path[i],curState=curState[prop];return curState},SimpleStore.prototype.on=function(event,path,callback){return"function"==typeof path&&(callback=path,path="**"),"object"==typeof path&&(path=pathToString(path)),this.events[event]||(this.events[event]={}),this.events[event][path]||(this.events[event][path]=[]),this.events[event][path].push(callback),this},SimpleStore.prototype.off=function(event,path,callback){if(0===arguments.length)return this.events={},this;if("object"==typeof path&&(path=pathToString(path)),"function"==typeof path&&(callback=path,path="**"),this.events[event])if("undefined"==typeof path)delete this.events[event];else if(this.events[event][path])if(callback)for(var index;(index=this.events[event][path].indexOf(callback))>-1;)this.events[event][path].splice(index,1);else delete this.events[event][path];return this},SimpleStore.prototype.trigger=function(event,path,data){"object"==typeof event&&(data=event,event=data.type,path=data.newPath),"object"==typeof path&&(path=pathToString(path));var events=this.events[event];if(events){var store=this;events[path]&&events[path].forEach(function(callback){callback.call(store,data)}),"**"!==path&&events["**"]&&events["**"].forEach(function(callback){callback.call(store,data)})}return this},SimpleStore.prototype.addItem=function(path,item,index){isString(path)&&(path=stringToPath(path));var newArray=[].concat(this.get(path));return 2===arguments.length?newArray.push(item):newArray.splice(index,0,item),this.set(path,newArray),this},SimpleStore.prototype.removeItem=function(path,index){isString(path)&&(path=stringToPath(path));var newArray=[].concat(this.get(path));return"object"==typeof index&&(index=findIndex(newArray,index)),newArray.splice(index,1),this.set(path,newArray),this},SimpleStore.prototype.moveItem=function(path,from,to){isString(path)&&(path=stringToPath(path));var array=this.get(path);if("object"==typeof from&&(from=findIndex(array,from),from===-1))throw new Error("Object not found in "+path.join("."));if(from>=array.length&&(from=array.length-1),to>=array.length&&(to=array.length-1),from===to)return this;var newArray=[].concat(array),item=newArray[from];return newArray.splice(from,1),newArray.splice(to,0,item),this.set(path,newArray),this},SimpleStore});